---
import '../styles/global.css';

interface Props {
  title: string;
  description?: string;
}

const {
  title,
  description = "Personal website for Christopher J. Bradley, Gulf War veteran, love advocate, family court reform activist, and civic educator focused on teaching liberty principles to families."
} = Astro.props;

const siteUrl = "https://christopherjbradley.com";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    <meta name="author" content="Christopher J. Bradley" />
    <link rel="canonical" href={siteUrl} />

    <!-- Open Graph / Social Media -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={siteUrl} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:site_name" content="Christopher J. Bradley" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />

    <!-- Structured Data -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Person",
      "name": "Christopher J. Bradley",
      "jobTitle": "Gulf War Veteran, Love Advocate, Civic Educator",
      "description": "Teaching liberty principles to families. Spreading the message: Love everyone, start with you.",
      "url": "https://christopherjbradley.com"
    }
    </script>

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>

    <!-- Dark mode script (runs before page load to prevent flash) -->
    <script is:inline>
      const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      };
      const isDark = getThemePreference() === 'dark';
      document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

      if (typeof localStorage !== 'undefined') {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains('dark');
          localStorage.setItem('theme', isDark ? 'dark' : 'light');
        });
        observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
      }
    </script>
  </head>
  <body class="min-h-screen bg-white dark:bg-slate-950 text-liberty-navy dark:text-slate-100">
    <!-- Skip to main content link for accessibility -->
    <a
      href="#main-content"
      class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 focus:z-50 focus:bg-liberty-gold focus:text-white focus:px-4 focus:py-2 focus:rounded-lg focus:font-semibold focus:shadow-lg"
    >
      Skip to main content
    </a>
    <slot />
  </body>
</html>
